{{ code.exampleCodeBlock('j', 1, [
    {i: 0, t: 'z', c: ['// app.js']},
    {i: 0, t: 'knomvsv', c: ['const', ' cluster ', '= ', 'require', '(', '\'cluster\'', ');']},
    {i: 0, t: 'knomvsv', c: ['const', ' os ', '= ', 'require', '(', '\'os\'', ');']},
    {i: 0, t: 'knomvsv', c: ['const', ' http ', '= ', 'require', '(', '\'http\'', ');']},
    {i: 0, t: 'knonv', c: ['const', ' port ', '= ', '3050',';']},
    {},
    {i: 0, t: 'kmovkv', c: ['const', ' requestHandler ', '= ', '(request, response)', ' => ', '{']},
    {i: 4, t: 'dmvsddpsxsv', c: ['response', 'end ', '(', '`Hello from number ', '${cluster', 'worker', 'id}', ' worker', '\\n', '`', ');']},
    {i: 0, t: 'v', c: ['};']},
    {},
    {i: 0, t: 'dmvsvkv', c: ['cluster', 'on', '(', '\'exit\'', ',', ' function',  '(worker) {']},
    {i: 4, t: 'cvxvsvdpv', c: ['console', '.', 'log', '(', '\'Worker %d exited\'', ',', ' worker', 'id', ');']},
    {i: 4, t: 'dmv', c: ['cluster', 'fork', '();']},
    {i: 0, t: 'v', c: ['});']},
    {},
    {i: 0, t: 'kvdpv', c: ['if ', '(', 'cluster', 'isMaster', ') {']},
    {i: 4, t: 'knodmvpv', c: ['const ', 'cpuCount', ' = ', 'os', 'cpus', '().', 'length', ';']},
    {i: 4, t: 'kvkvonvovov', c: ['for', '(', 'let', ' i', ' = ', '0', '; i', ' < ', 'cpuCount; i', '++', ') {']},
    {i: 8, t: 'dmv', c: ['cluster', 'fork', '();']},
    {i: 4, t: 'v', c: ['}']},
    {i: 0, t: 'vkv', c: ['}', ' else ', '{']},
    {i: 4, t: 'knodmv', c: ['const', ' server ', '= ', 'http', 'createServer', '(requestHandler);']},
    {i: 4, t: 'dmvkv', c: ['server', 'listen ', '(port, (err)', ' => ', '{']},
    {i: 8, t: 'kv', c: ['if ', '(err) {']},
    {i: 12, t: 'kcvxvsv', c: ['return ', 'console', '.', 'log', '(', '\'Got an error\'', ', err);']},
    {i: 8, t: 'v', c: ['}']},
    {i: 8, t: 'kcvxvspspsv', c: ['return ', 'console', '.', 'log', '(', '`Server listening on ', '${', 'port', '}', '`', ');']},
    {i: 4, t: 'v', c: ['});']},
    {i: 0, t: 'v', c: ['}']},
    {}
])}}
