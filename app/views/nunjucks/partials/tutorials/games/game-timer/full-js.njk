<div id="fullCodeJs" class="full-code-js js-hidden">
{{ code.exampleCodeBlock('j', 1, [
    {i: 0, t: 'kvodxvsv', c: ['var', ' canvas ', '= ', 'document', 'getElementById', '(', '\'demoCanvas\'', ');']},
    {i: 0, t: 'kvodpv', c: ['var', ' width ', '= ', 'canvas', 'width', ';']},
    {i: 0, t: 'kvodpv', c: ['var', ' height ', '= ', 'canvas', 'height', ';']},
    {i: 0, t: 'kvodxvsv', c: ['var', ' ctx ', '= ', 'canvas', 'getContext', '(', '\'2d\'', ');']},
    {i: 0, t: 'kvonv', c: ['var', ' padding ', '= ', '40', ';']},
    {i: 0, t: 'kvonv', c: ['var', ' lastTime ', '= ', '0', ';']},
    {i: 0, t: 'kvonv', c: ['var', ' deltaTime ', '= ', '0', ';']},
    {i: 0, t: 'kvonv', c: ['var', ' gameTime ', '= ', '0', ';']},
    {i: 0, t: 'kvonv', c: ['var', ' gameTimer ', '= ', '10', ';']},
    {i: 0, t: 'kvv', c: ['var', ' animation', ';']},
    {},
    {i: 0, t: 'dposv', c: ['ctx', 'font', ' = ', '\'6vmin Impact\'', ';']},
    {i: 0, t: 'dposv', c: ['ctx', 'textAlign', ' = ', '\'center\'', ';']},
    {i: 0, t: 'dposv', c: ['ctx', 'textBaseline', ' = ', '\'bottom\'', ';']},
    {},
    {i: 0, t: 'kmv', c: ['function', ' setDeltaTime', '(time) {']},
    {i: 4, t: 'kvovovonv', c: ['var', ' frameTime', ' = ', '(time', ' - ', 'lastTime)', ' / ', '1000', ';']},
    {i: 4, t: 'vovonovonv', c: ['deltaTime', ' = ', 'frameTime', ' < ', '0.1', ' ? ', 'frameTime', ' : ', '0.016', ';']},
    {i: 4, t: 'vov', c: ['lastTime', ' = ', 'time;']},
    {i: 0, t: 'v', c: ['}']},
    {},
    {i: 0, t: 'kmv', c: ['function', ' updateGameTimer', '() {']},
    {i: 4, t: 'vov', c: ['gameTimer', ' -= ', 'deltaTime;']},
    {i: 4, t: 'kvonv', c: ['if', '(gameTimer', ' <= ', '0', ') {']},
    {i: 8, t: 'vov', c: ['gameTimer', ' = ', 'gameTime;']},
    {i: 4, t: 'v', c: ['}']},
    {i: 0, t: 'v', c: ['}']},
    {},
    {i: 0, t: 'kmv', c: ['function', ' renderGameTimer', '() {']},
    {i: 4, t: 'kvonovov', c: ['var', ' hue', ' = ', '120', ' * ', '(gameTimer', ' / ', 'gameTime);']},
    {i: 4, t: 'kvovovovov', c: ['var', ' currentTimeWidth', ' = ', '(width', ' - ', 'padding)', ' * ', '(gameTimer', ' - ', 'gameTime);']},
    {i: 4, t: 'dposv', c: ['ctx', 'fillStyle', ' = ', '\'rgba(188, 188, 188, 0.6)\'', ';']},
    {i: 4, t: 'dmv', c: ['ctx', 'beginPath', '();']},
    {i: 4, t: 'dmvonvonvovnv', c: ['ctx', 'rect', '(padding', ' / ', '2', ', height', ' - ', '50', ', width', ' - ', 'padding, ', '30', ');']},
    {i: 4, t: 'dmv', c: ['ctx', 'fill', '();']},
    {},
    {i: 4, t: 'dposovosv', c: ['ctx', 'fillStyle', ' = ', '\'hsl(\'', ' + ', 'hue', ' + ', '\'100%, 50%)\'', ';']},
    {i: 4, t: 'dmv', c: ['ctx', 'beginPath', '();']},
    {i: 4, t: 'dmvonvonvnv', c: ['ctx', 'rect', '(padding', ' / ', '2', ', height', ' - ', '50', ', currentTimeWidth, ', '30', ');']},
    {i: 4, t: 'dmv', c: ['ctx', 'fill', '();']},
    {},
    {i: 4, t: 'dpv', c: ['ctx', 'beginPath', '();']},
    {i: 4, t: 'dmvsodxvonvonv', c: ['ctx', 'fillText', '(', '\'Time: \'', ' + ', 'gameTimer', 'toFixed', '(), width', ' / ', '2', ', height', ' - ', '50', ');']},
    {i: 0, t: 'v', c: ['}']},
    {},
    {i: 0, t: 'kmv', c: ['function', ' clearCanvas', '() {']},
    {i: 4, t: 'dmvnvnv', c: ['ctx', 'clearRect', '(', '0', ', ', '0', ', width, height);']},
    {i: 0, t: 'v', c: ['}']},
    {},
    {i: 0, t: 'kmv', c: ['function', ' main', '(time) {']},
    {i: 4, t: 'mv', c: ['setDeltaTime', '(time);']},
    {i: 4, t: 'mv', c: ['clearCanvas', '();']},
    {i: 4, t: 'mv', c: ['updateGameTimer', '();']},
    {i: 4, t: 'mv', c: ['renderGameTimer', '();']},
    {i: 4, t: 'vomv', c: ['animation', ' = ', 'requestAnimationFrame', '(main);']},
    {i: 0, t: 'v', c: ['}']},
    {},
    {i: 0, t: 'vov', c: ['gameTimer', ' = ', 'gameTime;']},
    {i: 0, t: 'vomv', c: ['animation', ' = ', 'requestAnimationFrame', '(main);']},
    {}
])}}
</div>
