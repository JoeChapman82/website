function main(){function e(r){var n=(r*=.001)-o;o=r,drawScene(gl,t,a,i,n),requestAnimationFrame(e)}if(gl.viewport(0,0,gl.drawingBufferWidth,gl.drawingBufferHeight),gl){gl.clearColor(0,0,0,1),gl.clear(gl.COLOR_BUFFER_BIT);var r=initShaderProgram(gl," attribute vec4 aVertexPosition;         attribute vec3 aVertexNormal;         attribute vec2 aTextureCoord;                 uniform mat4 uNormalMatrix;         uniform mat4 uModelViewMatrix;         uniform mat4 uProjectionMatrix;                 varying highp vec2 vTextureCoord;         varying highp vec3 vLighting;         void main() {         gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;         vTextureCoord = aTextureCoord;         highp vec3 ambientLight = vec3(0.3, 0.3, 0.3);         highp vec3 directionalLightColor = vec3(1, 1, 1);         highp vec3 directionalVector = normalize(vec3(0.85, 0.8, 0.75));                 highp vec4 transformedNormal = uNormalMatrix * vec4(aVertexNormal, 1.0);                 highp float directional = max(dot(transformedNormal.xyz, directionalVector), 0.0);         vLighting = ambientLight + (directionalLightColor * directional);    }","            varying highp vec2 vTextureCoord;             varying highp vec3 vLighting;             uniform sampler2D uSampler;             void main() {                 highp vec4 texelColor = texture2D(uSampler, vTextureCoord);                 gl_FragColor = vec4(texelColor.rgb * vLighting, texelColor.a);             }"),t={program:r,attribLocations:{vertexPosition:gl.getAttribLocation(r,"aVertexPosition"),vertexNormal:gl.getAttribLocation(r,"aVertexNormal"),textureCoord:gl.getAttribLocation(r,"aTextureCoord")},uniformLocations:{projectionMatrix:gl.getUniformLocation(r,"uProjectionMatrix"),modelViewMatrix:gl.getUniformLocation(r,"uModelViewMatrix"),normalMatrix:gl.getUniformLocation(r,"uNormalMatrix"),uSampler:gl.getUniformLocation(r,"uSampler")}},a=initBuffers(gl),i=loadTexture(gl,"images/random/box.png"),o=0;requestAnimationFrame(e)}else alert("no web gl")}function initBuffers(e){var r=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,r);e.bufferData(e.ARRAY_BUFFER,new Float32Array([-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1]),e.STATIC_DRAW);var t=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,t);e.bufferData(e.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0]),e.STATIC_DRAW);var a=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,a);e.bufferData(e.ARRAY_BUFFER,new Float32Array([0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,1]),e.STATIC_DRAW);var i=e.createBuffer();e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,i);return e.bufferData(e.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]),e.STATIC_DRAW),{position:r,normal:t,textureCoord:a,indices:i}}function loadTexture(e,r){var t=e.createTexture();e.bindTexture(e.TEXTURE_2D,t);var a=e.RGBA,i=e.RGBA,o=e.UNSIGNED_BYTE,n=new Uint8Array([0,0,255,255]);e.texImage2D(e.TEXTURE_2D,0,a,1,1,0,i,o,n);var c=new Image;return c.onload=function(){e.bindTexture(e.TEXTURE_2D,t),e.texImage2D(e.TEXTURE_2D,0,a,i,o,c),isPowerOf2(c.width)&&isPowerOf2(c.height)?e.generateMipmap(e.TEXTURE_2D):(e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR))},c.src=r,t}function isPowerOf2(e){return 0==(e&e-1)}function drawScene(e,r,t,a,i){cubeSizeIncreasing=(cubeSize+=cubeSizeIncreasing?10*i:10*-i)>=cubeSizeMin||cubeSize<0?!cubeSizeIncreasing:cubeSizeIncreasing,e.clearColor(0,0,0,1),e.clearDepth(1),e.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT);var o=45+cubeSize*Math.PI/180,n=e.canvas.clientWidth/e.canvas.clientHeight,c=mat4.create();mat4.perspective(c,o,n,.1,100);var u=mat4.create();mat4.translate(u,u,[-0,0,-6]),mat4.rotate(u,u,cubeRotation,[0,0,1]),mat4.rotate(u,u,.7*cubeRotation,[0,1,0]);var l=mat4.create();mat4.invert(l,u),mat4.transpose(l,l);var g=3,m=e.FLOAT,d=!1,f=0,E=0;e.bindBuffer(e.ARRAY_BUFFER,t.position),e.vertexAttribPointer(r.attribLocations.vertexPosition,g,m,d,f,E),e.enableVertexAttribArray(r.attribLocations.vertexPosition);var g=2,m=e.FLOAT,d=!1,f=0,E=0;e.bindBuffer(e.ARRAY_BUFFER,t.textureCoord),e.vertexAttribPointer(r.attribLocations.textureCoord,g,m,d,f,E),e.enableVertexAttribArray(r.attribLocations.textureCoord);var g=3,m=e.FLOAT,d=!1,f=0,E=0;e.bindBuffer(e.ARRAY_BUFFER,t.normal),e.vertexAttribPointer(r.attribLocations.vertexNormal,g,m,d,f,E),e.enableVertexAttribArray(r.attribLocations.vertexNormal),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,t.indices),e.useProgram(r.program),e.uniformMatrix4fv(r.uniformLocations.projectionMatrix,!1,c),e.uniformMatrix4fv(r.uniformLocations.modelViewMatrix,!1,u),e.uniformMatrix4fv(r.uniformLocations.normalMatrix,!1,l),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,a),e.uniform1i(r.uniformLocations.uSampler,0);var m=e.UNSIGNED_SHORT,E=0;e.drawElements(e.TRIANGLES,36,m,E),cubeRotation+=i}function initShaderProgram(e,r,t){var a=loadShader(e,e.VERTEX_SHADER,r),i=loadShader(e,e.FRAGMENT_SHADER,t),o=e.createProgram();return e.attachShader(o,a),e.attachShader(o,i),e.linkProgram(o),e.getProgramParameter(o,e.LINK_STATUS)?o:(console.log("Unable to initialize the shader program: "+e.getProgramInfoLog(o)),null)}function loadShader(e,r,t){var a=e.createShader(r);return e.shaderSource(a,t),e.compileShader(a),e.getShaderParameter(a,e.COMPILE_STATUS)?a:(console.log("An error occurred compiling the shaders: "+e.getShaderInfoLog(a)),e.deleteShader(a),null)}var canvas=document.getElementById("canvas1"),gl=canvas.getContext("webgl"),cubeRotation=0,cubeSize=0,cubeSizeMin=45,cubeSizeIncreasing=!0;document.getElementById("canvas1").width=window.innerWidth,document.getElementById("canvas1").height=window.innerHeight,main();